name: doc

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build-docs:
    defaults:
      run:
        shell: bash -el {0}
    if: github.repository == 'neurospin/pymultifracs'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache conda
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            doc-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('meta.yml') }}
      - name: Setup python with conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          activate-environment: test
          python-version: 3.11
          environment-file: meta.yml
          use-only-tar-bz2: true
      - name: Build doc
        shell: bash -el {0}
        run: |
          conda install -c conda-forge pip sphinx numpydoc pydata-sphinx-theme
          python -m pip install .
          cd doc
          ls $CONDA/envs
          export SPHINXBUILD=$CONDA/test/bin/sphinx-build
          export SPHINXBUILD=/usr/share/miniconda/envs/test/bin/sphinx-build
          make html
      - name: Archive artifact
        shell: sh
        if: runner.os == 'Linux'
        run: |
          tar \
            --dereference --hard-dereference \
            --directory doc/_build/ \
            -cvf "$RUNNER_TEMP/artifact.tar" \
            --exclude=.git \
            --exclude=.github \
            .
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: github-pages
          path: ${{ runner.temp }}/artifact.tar
          retention-days: 1
          if-no-files-found: error

  deploy-docs:
    needs: upload-docs

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2.0.2 # or the latest "vX.X.X" version tag for this action
