name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  linter-check:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper
          # list of changed files within `super-linter`
          fetch-depth: 0
      - name: Lint code
        uses: github/super-linter/slim@v4
        env:
          LINTER_RULES_PATH: .
          DEFAULT_BRANCH: master
          VALIDATE_ALL_CODEBASE: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILTER_REGEX_INCLUDE: ./pymultifracs/*.py
          VALIDATE_PYTHON_FLAKE8: true
          VALIDATE_PYTHON_PYLINT: true

  test-suite:
    defaults:
      run:
        shell: bash -el {0}
    runs-on: ${{ matrix.os }}
    needs: linter-check
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.8"]
    steps:
      - uses: actions/checkout@v3
      - name: Get Date
        id: get-date
        run: echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
        shell: bash
      - name: Cache conda
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('etc/example-environment.yml') }}
      - name: Setup python ${{ matrix.python-version }} with conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          environment-file: env.yml
          use-only-tar-bz2: true
      - name: Testing
        run: |
          conda install -c conda-forge pytest pytest-xdist
          pip uninstall pymultifracs
          pip install -e .
          pytest -n auto -x

  build-docs:
    if: github.repository == 'neurospin/pymultifracs'
    runs-on: ubuntu-latest
    needs: [linter-check, test-suite]
    steps:
      - uses: actions/checkout@v3
      - name: Cache conda
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            doc-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('etc/example-environment.yml') }}
      - name: Setup python with conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.11
          environment-file: meta.yml
          use-only-tar-bz2: true
      - name: Build doc
        run: |
          conda install -c conda-forge sphinx numpydoc pydata-sphinx-theme
          pip uninstall pymultifracs
          pip install -e .
          cd doc
          make html
      
  upload-docs:
    if: github.repository == 'neurospin/pymultifracs'
    runs-on: ubuntu-latest
    needs: [build-docs]
    steps:
      - name: Archive artifact
        shell: sh
        if: runner.os == 'Linux'
        run: |
          tar \
            --dereference --hard-dereference \
            --directory doc/_build/ \
            -cvf "$RUNNER_TEMP/artifact.tar" \
            --exclude=.git \
            --exclude=.github \
            .
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: github-pages
          path: ${{ runner.temp }}/artifact.tar
          retention-days: 1
          if-no-files-found: error

  deploy-docs:
    needs: upload-docs

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2.0.2 # or the latest "vX.X.X" version tag for this action